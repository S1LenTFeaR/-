#pragma once
#include "Book.h"

using namespace std;

class Books // Класс-контейнер для хранения списка книг.
{
    // Поля и методы объекта.

    private: // Поля и методы доступны только из методов данного класса.
        Book * * List; // Массив книг.
        int Capacity; // Ёмкость - количество книг, которые можно разместить в массиве.
        int Count; // Количество книг, размещённых в массиве.

    protected: // Поля и методы доступны только из методов данного класса и его наследников.

    public: // Поля и методы доступны из любой функции.

        // Конструкторы и деструкторы.
        Books(int capacity); // Конструктор.
        ~Books(); // Деструктор.

        // Методы ввода-вывода.
        bool Read(istream & stream); // Прочитать список книг из потока.
        bool Read(string filepath); // Прочитать список книг из файла.
        void Write(ostream & stream) const; // Записать список книг в поток.
        bool Write(string filepath) const; // Записать список книг в файл.
        void WriteToTable() const; // Вывести список книг на экран в виде таблицы.
        // const в описании метода означает, что метод не меняет состояние объекта и
        // может быть вызван для неизменяемого объекта.

        // Методы доступа к полям.
        // Методы Get нужны для получения значений из недоступных извне полей класса.
        int GetCount() const {return Count;} // Получить количество книг, размещённых в массиве.
        int GetCapacity() const {return Capacity;} // Получить оличество книг, которые можно разместить в массиве.

        // Методы добавления и удаления.
        bool Add(Book * book); // Добавить книгу.
        // Амперсанд (&) в типе означает, что значение в функции будет передано по ссылке (без копирования).
        Book * Remove(int index); // Удалить книгу, сохранив порядок оставшихся книг.
        void DeleteAll(); // Удалить, освободив память, все книги из контейнера.

        // Методы поиска.
        void SearchByAuthor(string author) const; // Найти все книги заданного автора.
        void FindNewest() const; // Найти наиболее новую книгу (с наибольшим годом публикации).

};
